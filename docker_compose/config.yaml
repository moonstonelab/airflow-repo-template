name: docker_compose
services:
  airflow-init:
    command:
      - -c
      - |
        if [[ -z "" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
          echo "If you are on Linux, you SHOULD follow the instructions below to set "
          echo "AIRFLOW_UID environment variable, otherwise files will be owned by root."
          echo "For other operating systems you can get rid of the warning with manually created .env file:"
          echo "    See: https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#setting-the-right-airflow-user"
          echo
        fi
        one_meg=1048576
        mem_available=$$(($$(getconf _PHYS_PAGES) * $$(getconf PAGE_SIZE) / one_meg))
        cpus_available=$$(grep -cE 'cpu[0-9]+' /proc/stat)
        disk_available=$$(df / | tail -1 | awk '{print $$4}')
        warning_resources="false"
        if (( mem_available < 4000 )) ; then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough memory available for Docker.\e[0m"
          echo "At least 4GB of memory required. You have $$(numfmt --to iec $$((mem_available * one_meg)))"
          echo
          warning_resources="true"
        fi
        if (( cpus_available < 2 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough CPUS available for Docker.\e[0m"
          echo "At least 2 CPUs recommended. You have $${cpus_available}"
          echo
          warning_resources="true"
        fi
        if (( disk_available < one_meg * 10 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough Disk space available for Docker.\e[0m"
          echo "At least 10 GBs recommended. You have $$(numfmt --to iec $$((disk_available * 1024 )))"
          echo
          warning_resources="true"
        fi
        if [[ $${warning_resources} == "true" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: You have not enough resources to run Airflow (see above)!\e[0m"
          echo "Please follow the instructions to increase amount of resources available:"
          echo "   https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#before-you-begin"
          echo
        fi
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R ":0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    depends_on:
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    entrypoint:
      - /bin/bash
    environment:
      _AIRFLOW_DB_MIGRATE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_PASSWORD: airflow
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _PIP_ADDITIONAL_REQUIREMENTS: ""
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    image: my-airflow:latest
    networks:
      default: null
    user: "0:0"
    volumes:
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose
        target: /sources
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/src
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/config
        target: /opt/airflow/config
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true
  airflow-scheduler:
    command:
      - scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: ""
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - http://localhost:8974/health
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 30s
    image: my-airflow:latest
    networks:
      default: null
    restart: always
    user: "50000:0"
    volumes:
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/src
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/config
        target: /opt/airflow/config
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true
  airflow-triggerer:
    command:
      - triggerer
    depends_on:
      airflow-init:
        condition: service_completed_successfully
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: ""
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    healthcheck:
      test:
        - CMD-SHELL
        - airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 30s
    image: my-airflow:latest
    networks:
      default: null
    restart: always
    user: "50000:0"
    volumes:
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/src
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/config
        target: /opt/airflow/config
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true
  airflow-webserver:
    command:
      - webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: ""
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
    healthcheck:
      test:
        - CMD
        - curl
        - --fail
        - http://localhost:8080/health
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 30s
    image: my-airflow:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    restart: always
    user: "50000:0"
    volumes:
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/src
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/config
        target: /opt/airflow/config
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true
  airflow-worker:
    command:
      - celery
      - worker
    depends_on:
      airflow-init:
        condition: service_completed_successfully
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    environment:
      _PIP_ADDITIONAL_REQUIREMENTS: ""
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__FERNET_KEY: ""
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
      DUMB_INIT_SETSID: "0"
    healthcheck:
      test:
        - CMD-SHELL
        - celery --app airflow.providers.celery.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}" || celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"
      timeout: 10s
      interval: 30s
      retries: 5
      start_period: 30s
    image: my-airflow:latest
    networks:
      default: null
    restart: always
    user: "50000:0"
    volumes:
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/src
        target: /opt/airflow/dags
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/logs
        target: /opt/airflow/logs
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/config
        target: /opt/airflow/config
        bind:
          create_host_path: true
      - type: bind
        source: /home/jhonghee/repos/airflow-repo-template/docker_compose/plugins
        target: /opt/airflow/plugins
        bind:
          create_host_path: true
  postgres:
    environment:
      POSTGRES_DB: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_USER: airflow
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - airflow
      interval: 10s
      retries: 5
      start_period: 5s
    image: postgres:13
    networks:
      default: null
    restart: always
    volumes:
      - type: volume
        source: postgres-db-volume
        target: /var/lib/postgresql/data
        volume: {}
  redis:
    expose:
      - "6379"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 30s
      interval: 10s
      retries: 50
      start_period: 30s
    image: redis:7.2-bookworm
    networks:
      default: null
    restart: always
networks:
  default:
    name: docker_compose_default
volumes:
  postgres-db-volume:
    name: docker_compose_postgres-db-volume
x-airflow-common:
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
  environment:
    _PIP_ADDITIONAL_REQUIREMENTS: ""
    AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__FERNET_KEY: ""
    AIRFLOW__CORE__LOAD_EXAMPLES: "true"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
  image: my-airflow:latest
  user: "50000:0"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./config:/opt/airflow/config
    - ./plugins:/opt/airflow/plugins
x-airflow-common-override:
  environment:
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  volumes:
    - /home/jhonghee/repos/airflow-repo-template/src:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./config:/opt/airflow/config
    - ./plugins:/opt/airflow/plugins
